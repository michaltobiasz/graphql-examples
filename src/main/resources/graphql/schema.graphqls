interface Human {
    name: String
}

type Attendee implements Human{
    id: ID!
    name: String
}

type Speaker implements Human{
    id: ID!
    name: String
    twitter: String
    talks: [Talk]
}

type Talk {
    id: ID!
    title:String
    # Test comment
    description:String
    speakers: [Speaker]
}

union ALL = Speaker | Talk

input SpeakerInput {
    name: String
    twitter: String
}

type Score {
    title: String
    score: Int
}

type Subscription {
    scores(title: String!) : Score
}

type Query {
    allTalks: [Talk]
    allAttendees: [Attendee]
    allSpeakers: [Speaker]
    allAll: [ALL]
    allHumans: [Human]
}

type Mutation {
    addSpeaker(speaker: SpeakerInput) : Speaker
}

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}